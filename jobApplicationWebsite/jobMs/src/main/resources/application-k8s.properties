spring.application.name=jobMs

# All microservices names
job-service.url=http://jobms
company-service.url=http://companyms
review-service.url=http://reviewms

server.port=8082
spring.main.banner-mode=off
logging.level.root=warn
server.error.include-message=always
# Postgres configuration
# change localhost to container names
spring.datasource.url=jdbc:postgresql://postgres:5432/jobs
spring.datasource.username=george
spring.datasource.password=password
spring.jpa.database=postgresql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# eureka diable eureka in kubernetes
# eureka.client.service-url.defaultZone=http://servicereg:8761/eureka/
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

# zipkin settings
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0

#Config server disbale config server in kubernetes
#spring.config.import=configserver:http://localhost:8080
# spring.config.import=optional:configserver:http://config-server:8080/application/prod

# Resilience4j
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.companyBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration-in-open-state=10s

resilience4j.circuitbreaker.instances.companyBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

resilience4j.ratelimiter.instances.companyBreaker.timeout-duration.seconds=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period.seconds=4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2


#Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always